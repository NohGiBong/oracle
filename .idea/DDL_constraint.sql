--1
CREATE TABLE PRODUCT (
    P_CODE NUMBER(3),
    P_NAME VARCHAR2(20),
    PRICE NUMBER(4)
);

SELECT * FROM PRODUCT;

--2
CREATE TABLE CUSTOMER
(
    C_CODE NUMBER(3) CONSTRAINT C_CODE_CON PRIMARY KEY,
    C_NAME VARCHAR2(20) CONSTRAINT NAME_CON UNIQUE,
    GENDER VARCHAR2(6) CHECK ( GENDER IN ('남자', '여자') ),
    TEL    VARCHAR2(15) CONSTRAINT TEL_CON NOT NULL ,
    ADDR   VARCHAR2(100)
);

SELECT * FROM CUSTOMER;

--3
CREATE TABLE SALES
(
    S_CODE NUMBER(3) CONSTRAINT S_CODE_CON PRIMARY KEY ,
    C_CODE NUMBER(3) CONSTRAINT C_CODE2_CON REFERENCES CUSTOMER (C_CODE),
    P_CODE VARCHAR2(6),
    AMOUNT NUMBER(3) CONSTRAINT AMOUNT_CON NOT NULL
);
ALTER TABLE SALES MODIFY (P_CODE NUMBER(3));

SELECT * FROM SALES;

--4
ALTER TABLE PRODUCT ADD MAKER VARCHAR2(20);

--5
ALTER TABLE PRODUCT ADD CONSTRAINT PK_P_CODE PRIMARY KEY (P_CODE);
--OR
ALTER TABLE PRODUCT MODIFY (P_CODE CONSTRAINT PK_P_CODE PRIMARY KEY);

--6
ALTER TABLE PRODUCT ADD CONSTRAINT PK_P_NAME UNIQUE (P_NAME);
ALTER TABLE PRODUCT MODIFY (P_NAME NOT NULL);
--OR
ALTER TABLE PRODUCT MODIFY (P_NAME CONSTRAINT PK_P_NAME UNIQUE CONSTRAINT PK_P_NAME_NN NOT NULL );

--7
ALTER TABLE PRODUCT ADD CONSTRAINT PK_PRICE CHECK ( PRICE BETWEEN 100 AND 999);

--8
ALTER TABLE SALES RENAME COLUMN AMOUNT TO QTY;

--9
ALTER TABLE SALES ADD CONSTRAINT PK_P2_CODE FOREIGN KEY (P_CODE) REFERENCES PRODUCT (P_CODE);

--10
-- DML이란 SQL에서 DML(Data Manipulation Language)은 데이터베이스의 데이터를 조작하고 조회하기 위해 사용되는 언어의 일부분입니다.
-- DML은 데이터의 삽입, 갱신, 삭제, 조회 등과 관련된 작업을 수행하는 명령어와 구문을 포함합니다.

--고객 테이블에 c_name의 unique 제약조건을 사용안함으로 변경하고 해당 테이블의 데이터에 DML 까지 안되도록 변경하는 쿼리를 작성하라.

-- ENABLE VALIDATE : 제약조건 활성화, 적합성(유효성) 검사 실행(기존 데이터가 조건에 맞는지 검사, 모든 데이터 제약조건 확인)
-- ENABLE NOVALIDATE : 제약조건 활성화, 적합성 검사 미실행(기존 데이터가 조건에 맞는지 검사하지 않음, 앞으로 저장할 데이터 제약조건 확인)
-- DISABLE VALIDATE : 제약조건 비활성화, 적합성(유효성) 검사 실행 (새로운 데이터 저장 불가)
-- DISABLE NOVALIDATE 제약조건 비활성화, 적합성(유효성) 검사 미실행 (제약조건 확인하지 않음)
ALTER TABLE CUSTOMER DISABLE VALIDATE CONSTRAINT NAME_CON;
INSERT INTO CUSTOMER VALUES (1, 'TEST', 'TEST', 'TEST', 'TEST');

-- DML 작업을 막는 CHECK 제약 조건 추가. 안 배운 것 나중에 다시 확인
ALTER TABLE CUSTOMER ADD CONSTRAINT no_dml CHECK (1=0);

--11
ALTER TABLE CUSTOMER ENABLE VALIDATE CONSTRAINT NAME_CON;

-- CHECK 제약 조건 삭제
ALTER TABLE CUSTOMER DROP CONSTRAINT no_dml;

--12
SELECT TABLE_NAME, COLUMN_NAME, CONSTRAINT_NAME
FROM USER_CONS_COLUMNS
WHERE TABLE_NAME LIKE 'CUSTOMER';
